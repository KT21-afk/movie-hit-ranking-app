name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: movie-hit-ranking-app/package-lock.json
        
    - name: Install dependencies
      run: |
        cd movie-hit-ranking-app
        npm ci
        
    - name: Run type check
      run: |
        cd movie-hit-ranking-app
        npm run type-check
        
    - name: Run linting
      run: |
        cd movie-hit-ranking-app
        npm run lint
        
    - name: Run tests
      run: |
        cd movie-hit-ranking-app
        npm run test:coverage
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: movie-hit-ranking-app/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Build application
      run: |
        cd movie-hit-ranking-app
        npm run build:production
      env:
        TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
        TMDB_BASE_URL: https://api.themoviedb.org/3

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security audit
      run: |
        cd movie-hit-ranking-app
        npm audit --audit-level moderate
        
    - name: Check for vulnerabilities
      run: |
        cd movie-hit-ranking-app
        npx audit-ci --moderate

  deploy-preview:
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Deploy to Vercel Preview
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: movie-hit-ranking-app
        # vercel-org-id and scope are only needed for team accounts
        # vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        # scope: ${{ secrets.VERCEL_ORG_ID }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Deploy to Vercel Production
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: movie-hit-ranking-app
        # vercel-org-id and scope are only needed for team accounts
        # vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        # scope: ${{ secrets.VERCEL_ORG_ID }}